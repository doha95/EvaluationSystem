{"name": "Test With Wrong UserName", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n0   chromedriver                        0x00000001025b84cc chromedriver + 4162764\n1   chromedriver                        0x00000001025b0654 chromedriver + 4130388\n2   chromedriver                        0x0000000102207bc0 chromedriver + 293824\n3   chromedriver                        0x000000010224e040 chromedriver + 581696\n4   chromedriver                        0x000000010228dab0 chromedriver + 842416\n5   chromedriver                        0x00000001022416bc chromedriver + 530108\n6   chromedriver                        0x0000000102242930 chromedriver + 534832\n7   chromedriver                        0x000000010257ddf8 chromedriver + 3923448\n8   chromedriver                        0x00000001025823cc chromedriver + 3941324\n9   chromedriver                        0x0000000102566028 chromedriver + 3825704\n10  chromedriver                        0x0000000102582f2c chromedriver + 3944236\n11  chromedriver                        0x00000001025586e4 chromedriver + 3770084\n12  chromedriver                        0x000000010259f970 chromedriver + 4061552\n13  chromedriver                        0x000000010259fae8 chromedriver + 4061928\n14  chromedriver                        0x00000001025b02d4 chromedriver + 4129492\n15  libsystem_pthread.dylib             0x0000000182ca026c _pthread_start + 148\n16  libsystem_pthread.dylib             0x0000000182c9b08c thread_start + 8", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"e12eba0dd562658872c48d3fac1319c1\")>\n\n    @allure.feature(\"Authentication features\")\n    @allure.title(\"Test With Wrong UserName\")\n    def test_login_wrong_userName(driver):\n        login_page = LoginPage(driver=driver)\n        login_page.open_login_page()\n        # TODO: change it into JSON data with the users\n>       login_page.enter_username(\"wrong username\")\n\ntests/test_login.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageObject/LoginPage.py:17: in enter_username\n    username_input = self.wait_for(self.__user_name_locator)\npageObject/common/BaseModule.py:11: in wait_for\n    element = self.wait.until(EC.presence_of_element_located(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e12eba0dd562658872c48d3fac1319c1\")>\nmethod = <function presence_of_element_located.<locals>._predicate at 0x104bf5080>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       0   chromedriver                        0x00000001025b84cc chromedriver + 4162764\nE       1   chromedriver                        0x00000001025b0654 chromedriver + 4130388\nE       2   chromedriver                        0x0000000102207bc0 chromedriver + 293824\nE       3   chromedriver                        0x000000010224e040 chromedriver + 581696\nE       4   chromedriver                        0x000000010228dab0 chromedriver + 842416\nE       5   chromedriver                        0x00000001022416bc chromedriver + 530108\nE       6   chromedriver                        0x0000000102242930 chromedriver + 534832\nE       7   chromedriver                        0x000000010257ddf8 chromedriver + 3923448\nE       8   chromedriver                        0x00000001025823cc chromedriver + 3941324\nE       9   chromedriver                        0x0000000102566028 chromedriver + 3825704\nE       10  chromedriver                        0x0000000102582f2c chromedriver + 3944236\nE       11  chromedriver                        0x00000001025586e4 chromedriver + 3770084\nE       12  chromedriver                        0x000000010259f970 chromedriver + 4061552\nE       13  chromedriver                        0x000000010259fae8 chromedriver + 4061928\nE       14  chromedriver                        0x00000001025b02d4 chromedriver + 4129492\nE       15  libsystem_pthread.dylib             0x0000000182ca026c _pthread_start + 148\nE       16  libsystem_pthread.dylib             0x0000000182c9b08c thread_start + 8\n\n.venv/lib/python3.12/site-packages/selenium/webdriver/support/wait.py:105: TimeoutException"}, "start": 1706622015103, "stop": 1706622020428, "uuid": "48516c6d-c047-40eb-8242-a655c6853f50", "historyId": "7bd108c303f864c9999ebb023847104e", "testCaseId": "7bd108c303f864c9999ebb023847104e", "fullName": "tests.test_login#test_login_wrong_userName", "labels": [{"name": "feature", "value": "Authentication features"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "host", "value": "Dohas-MacBook-Pro.local"}, {"name": "thread", "value": "12817-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}]}